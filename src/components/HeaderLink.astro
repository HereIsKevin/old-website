---
import type { HTMLAttributes } from "astro/types"

export interface Props extends HTMLAttributes<"li"> {
  href?: HTMLAttributes<"a">["href"]
  target?: HTMLAttributes<"a">["target"]
}

const { href, target, ...props } = Astro.props

const { pathname } = Astro.url
const isActive = href === pathname || href == pathname.replace(/\/$/, "")
---

<li {...props}>
  <a {href} {target} class:list={{ active: isActive }}>
    <slot />
  </a>
</li>

<style>
  a {
    color: var(--color-foreground);
    text-decoration: none;
  }

  .active {
    text-decoration-color: var(--color-primary);
    text-decoration-line: underline;
    text-decoration-thickness: 3px;
    text-underline-position: under;
  }

  a[target="_blank"]::after {
    content: "â†—";

    vertical-align: top;
    font-size: 0.65rem;
    font-weight: bold;
  }

  li:not(:last-child) {
    margin-right: 20px;
  }
</style>
