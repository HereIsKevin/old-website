---
import Footer from "../components/Footer.astro"
import Head from "../components/Head.astro"
import Header from "../components/Header.astro"
import "../styles/global.css"

export interface Props {
  title: string
  image: string
}

const { title, image } = Astro.props
const hasContent = Astro.slots.has("default")
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <Head {title} />
  </head>
  <body>
    <Header id="header" class="header-accented" />
    <main>
      <section id="hero">
        <div class="hero-wrapper">
          <div class="hero-container">
            <slot name="hero" />
          </div>
        </div>
      </section>
      {
        hasContent && (
          <section id="content">
            <div class="content-container">
              <slot />
            </div>
          </section>
        )
      }
    </main>
    <Footer
      {...!hasContent && {
        background: "var(--color-primary)",
        foreground: "rgb(255 255 255)",
        border: "rgb(255 255 255)",
      }}
    />
  </body>
</html>

<style define:vars={{ image }}>
  #header {
    position: fixed;
    z-index: 1;
  }

  .header-transition {
    transition-property: all;
    transition-duration: 0.5s;
    transition-timing-function: ease;
  }

  .header-accented {
    --color-foreground: rgb(255 255 255);
    --color-primary: rgb(255 255 255);
    --color-tertiary: rgb(255 255 255);
    --color-overlay: rgb(60 120 240 / 75%);
  }

  #hero {
    height: 100dvh;

    background-attachment: fixed;
    background-color: var(--color-secondary);
    background-image: var(--image);
    background-position: center;
    background-size: cover;
    color: rgb(255 255 255);
  }

  .hero-wrapper {
    display: flex;
    align-items: center;
    margin: auto;
    max-width: var(--content-width);
    height: 100%;
  }

  .hero-container {
    padding: 25px;
  }

  #content {
    margin: auto;
    max-width: var(--content-width);
  }

  .content-container {
    margin: 25px;
  }
</style>

<script>
  const header = document.getElementById("header")!
  const hero = document.getElementById("hero")!

  if (window.scrollY >= hero.offsetHeight - header.offsetHeight) {
    header.classList.remove("header-accented")
  }

  document.addEventListener(
    "scroll",
    () => {
      const hasAccented = header.classList.contains("header-accented")
      const threshold = hero.offsetHeight - header.offsetHeight

      // Add transition afterwards to prevent flashing on load.
      if (!header.classList.contains("header-transition")) {
        header.classList.add("header-transition")
      }

      if (hasAccented && window.scrollY >= threshold) {
        header.classList.remove("header-accented")
      } else if (!hasAccented && window.scrollY < threshold) {
        header.classList.add("header-accented")
      }
    },
    { passive: true }
  )
</script>
